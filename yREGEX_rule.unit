#!/usr/local/bin/koios
#   koios-polos (axis of heaven) unit testing meta-language



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
PREP          include the prototype headers                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       include public header                yREGEX.h                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       include private header               yREGEX_priv.h               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify rule allocation and freeing                          yregex_rule__new, yregex_rule__free, yregex_rule__purge                                               ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       prepare for run                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     initialize the system                yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   void *x_head = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   void *x_next = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   void *x_save = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   void *x_plus = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   void *x_last = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   char  x_custom [LEN_HUND] = "";                                                                                                                                                                                            

   COND       verify program setup initializes                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       add a first                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a rule                           yregex_rule__new            &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is assigned           - - - - - - - - - - - - -   x_head                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_rule__memory         x_head                                                                                                s_equal     å_.__æ                                                                                                         
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   1, fore=   1, back=   1                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   1, head=%-10p, tail=%p", x_head, x_head);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       delete the first                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete a rule                        yregex_rule__free           &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is grounded           - - - - - - - - - - - - -   x_head                                                                                                p_equal     NULL                                                                                                 
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       add first, again                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a rule                           yregex_rule__new            &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is assigned           - - - - - - - - - - - - -   x_head                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_rule__memory         x_head                                                                                                s_equal     å_.__æ                                                                                                         
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   1, fore=   1, back=   1                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   1, head=%-10p, tail=%p", x_head, x_head);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       try to add into a taken pointer                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a rule                           yregex_rule__new            &x_head                                                                                               i_lesser    0                                                                                                    

   COND       try to add into null pointer                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a rule                           yregex_rule__new            NULL                                                                                                  i_lesser    0                                                                                                    

   COND       try to free a empty pointer                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete a rule                        yregex_rule__free           &x_next                                                                                               i_lesser    0                                                                                                    

   COND       try to free a null pointer                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete a rule                        yregex_rule__free           NULL                                                                                                  i_lesser    0                                                                                                    

   COND       add another                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a rule                           yregex_rule__new            &x_next                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is assigned           - - - - - - - - - - - - -   x_next                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_rule__memory         x_next                                                                                                s_equal     å_.X_æ                                                                                          
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   2, fore=   2, back=   2                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   2, head=%-10p, tail=%p", x_head, x_next);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       and a third                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a rule                           yregex_rule__new            &x_save                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is assigned           - - - - - - - - - - - - -   x_save                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_rule__memory         x_save                                                                                                s_equal     å_.X_æ                                                                                          
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   3, fore=   3, back=   3                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   3, head=%-10p, tail=%p", x_head, x_save);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       and a forth                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a rule                           yregex_rule__new            &x_last                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is assigned           - - - - - - - - - - - - -   x_last                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_rule__memory         x_last                                                                                                s_equal     å_.X_æ                                                                                          
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   4, fore=   4, back=   4                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   4, head=%-10p, tail=%p", x_head, x_last);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       and then a final                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a rule                           yregex_rule__new            &x_plus                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is assigned           - - - - - - - - - - - - -   x_plus                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_rule__memory         x_plus                                                                                                s_equal     å_.X_æ                                                                                          
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   5, fore=   5, back=   5                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   5, head=%-10p, tail=%p", x_head, x_plus);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       check full list                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     ... verify memory                    yregex_rule__memory         x_head                                                                                                s_equal     å_._Xæ                                                                                          
     exec     ... verify memory                    yregex_rule__memory         x_next                                                                                                s_equal     å_.XXæ                                                                                          
     exec     ... verify memory                    yregex_rule__memory         x_save                                                                                                s_equal     å_.XXæ                                                                                          
     exec     ... verify memory                    yregex_rule__memory         x_last                                                                                                s_equal     å_.XXæ                                                                                          
     exec     ... verify memory                    yregex_rule__memory         x_plus                                                                                                s_equal     å_.X_æ                                                                                          

   COND       review all rules                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      ... rule details                     yregex_rule__detail         x_head                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                
     get      ... rule details                     yregex_rule__detail         x_next                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                    
     get      ... rule details                     yregex_rule__detail         x_save                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                    
     get      ... rule details                     yregex_rule__detail         x_last                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                    
     get      ... rule details                     yregex_rule__detail         x_plus                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                    

   COND       delete a middle                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete a rule                        yregex_rule__free           &x_save                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is grounded           - - - - - - - - - - - - -   x_save                                                                                                p_equal     NULL                                                                                                 
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   4, fore=   4, back=   4                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   4, head=%-10p, tail=%p", x_head, x_plus);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       review all rules                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      ... rule details                     yregex_rule__detail         x_head                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                
     get      ... rule details                     yregex_rule__detail         x_next                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                    
     get      ... rule details                     yregex_rule__detail         x_save                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                    
     get      ... rule details                     yregex_rule__detail         x_last                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                    
     get      ... rule details                     yregex_rule__detail         x_plus                                                                                                s_equal     RULE detail      : self ¬¬¬¬¬¬¬¬¬¬, prev ¬¬¬¬¬¬¬¬¬¬, next ¬¬¬¬¬¬¬¬¬¬                                                    

   COND       delete the tail                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete a rule                        yregex_rule__free           &x_plus                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is grounded           - - - - - - - - - - - - -   x_plus                                                                                                p_equal     NULL                                                                                                 
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   3, fore=   3, back=   3                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   3, head=%-10p, tail=%p", x_head, x_last);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       delete the head                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delete a rule                        yregex_rule__free           &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is grounded           - - - - - - - - - - - - -   x_head                                                                                                p_equal     NULL                                                                                                 
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   2, fore=   2, back=   2                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   2, head=%-10p, tail=%p", x_next, x_last);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       add another                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a rule                           yregex_rule__new            &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify rule is assigned           - - - - - - - - - - - - -   x_head                                                                                                p_not       NULL                                                                                                 
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   3, fore=   3, back=   3                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "RULE list        : num=   3, head=%-10p, tail=%p", x_next, x_head);                                                                                                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       check full list                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     ... verify memory                    yregex_rule__memory         x_head                                                                                                s_equal     å_.X_æ                                                                                          
     exec     ... verify memory                    yregex_rule__memory         x_next                                                                                                s_equal     å_._Xæ                                                                                          
     exec     ... verify memory                    yregex_rule__memory         x_save                                                                                                s_equal     n/a                                                                                                  
     exec     ... verify memory                    yregex_rule__memory         x_last                                                                                                s_equal     å_.XXæ                                                                                          
     exec     ... verify memory                    yregex_rule__memory         x_plus                                                                                                s_equal     n/a                                                                                                  

   COND       purge all                                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     purge                                yregex_rule__purge                                                                                                                i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       purge all, on empty list                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     purge                                yregex_rule__purge                                                                                                                i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       verify program teardown purges                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify adding, searching, and cursoring strings             yregex_rule__add, yregex_rule__by_cursor, yregex_rule__by_index                                       ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   tRULE  *x_curr = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   int    x_rpos        = 0;                                                                                                                                                                                                  
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       attempt to cursor (relatively) on empty dataset                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     go to head                           yregex_rule__by_cursor      YDLST_HEAD       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to prev                           yregex_rule__by_cursor      YDLST_PREV       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to next                           yregex_rule__by_cursor      YDLST_NEXT       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to tail                           yregex_rule__by_cursor      YDLST_TAIL       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to next                           yregex_rule__by_cursor      YDLST_NEXT       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to prev                           yregex_rule__by_cursor      YDLST_PREV       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 

   COND       attempt to cursor (absolutely) on empty dataset                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     go to head                           yregex_rule__by_cursor      YDLST_DHEAD      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to prev                           yregex_rule__by_cursor      YDLST_DPREV      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to next                           yregex_rule__by_cursor      YDLST_DNEXT      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to tail                           yregex_rule__by_cursor      YDLST_DTAIL      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to next                           yregex_rule__by_cursor      YDLST_DNEXT      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to prev                           yregex_rule__by_cursor      YDLST_DPREV      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 

   COND       attempt to index on empty dataset                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     go to negative                       yregex_rule__by_index       -2               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to first                          yregex_rule__by_index       0                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to third                          yregex_rule__by_index       2                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to fifth                          yregex_rule__by_index       4                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go beyond end                        yregex_rule__by_index       6                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to current                        yregex_rule__by_index       -1               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 

   COND       verify a short string                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1+test)"                                                                                           i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 11 [((;1+test))                                  ]                                
     exec     add a string                         yregex_rule__add            5              , 4                                                                                    i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   1, fore=   1, back=   1                                                    

   COND       attempt to cursor (relatively) on single-item                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     go to head                           yregex_rule__by_cursor      YDLST_HEAD       , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to prev (bounce)                  yregex_rule__by_cursor      YDLST_PREV       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to next (bounce)                  yregex_rule__by_cursor      YDLST_NEXT       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to tail                           yregex_rule__by_cursor      YDLST_TAIL       , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to next (bounce)                  yregex_rule__by_cursor      YDLST_NEXT       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to prev (bounce)                  yregex_rule__by_cursor      YDLST_PREV       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 

   COND       attempt to cursor (absolutely) on single item                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     go to head                           yregex_rule__by_cursor      YDLST_DHEAD      , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to prev (boom)                    yregex_rule__by_cursor      YDLST_DPREV      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to next (boom)                    yregex_rule__by_cursor      YDLST_DNEXT      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to tail                           yregex_rule__by_cursor      YDLST_DTAIL      , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to next (boom)                    yregex_rule__by_cursor      YDLST_DNEXT      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to prev (boom)                    yregex_rule__by_cursor      YDLST_DPREV      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 

   COND       attempt to index on single item                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     go to negative                       yregex_rule__by_index       -2               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to first                          yregex_rule__by_index       0                , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to third                          yregex_rule__by_index       2                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to fifth                          yregex_rule__by_index       4                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go beyond end                        yregex_rule__by_index       6                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to current                        yregex_rule__by_index       -1               , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 

   COND       attempt adding with bad data                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1+test)"                                                                                           i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 11 [((;1+test))                                  ]                                
     exec     add a string                         yregex_rule__add            -1             , 4                                                                                    i_lesser    0                                                                                                    
     exec     add a string                         yregex_rule__add            20             , 4                                                                                    i_lesser    0                                                                                                    
     exec     add a string                         yregex_rule__add            5              , 0                                                                                    i_lesser    0                                                                                                    
     exec     add a string                         yregex_rule__add            5              , 6                                                                                    i_lesser    0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    

   COND       verify adding several more                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1+test)(;5+a)abba(;3-zero)(#one)(;6-twenty)(;4-o)"                                                 i_equal     0                                                                                                    
     exec     ... add a string                     yregex_rule__add            5              , 4                                                                                    i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   1, fore=   1, back=   1                                                    
     exec     ... add string                       yregex_rule__add            14             , 1                                                                                    i_equal     1                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   2, fore=   2, back=   2                                                    
     exec     ... add string                       yregex_rule__add            24             , 4                                                                                    i_equal     2                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   3, fore=   3, back=   3                                                    
     exec     ... add string                       yregex_rule__add            39             , 6                                                                                    i_equal     3                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   4, fore=   4, back=   4                                                    
     exec     ... add string                       yregex_rule__add            50             , 1                                                                                    i_equal     4                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   5, fore=   5, back=   5                                                    

   COND       attempt to cursor (relatively) on a group                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     go to head                           yregex_rule__by_cursor      YDLST_HEAD       , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to prev (bounce)                  yregex_rule__by_cursor      YDLST_PREV       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to next (bounce)                  yregex_rule__by_cursor      YDLST_NEXT       , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     a                                                                                                    
     exec     go to next                           yregex_rule__by_cursor      YDLST_NEXT       , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     zero                                                                                                 
     exec     go to tail                           yregex_rule__by_cursor      YDLST_TAIL       , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     o                                                                                                    
     exec     go to next (bounce)                  yregex_rule__by_cursor      YDLST_NEXT       , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     o                                                                                                    
     exec     go to prev (bounce)                  yregex_rule__by_cursor      YDLST_PREV       , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     twenty                                                                                               
     exec     go to prev                           yregex_rule__by_cursor      YDLST_PREV       , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     zero                                                                                                 

   COND       attempt to cursor (absolutely) on a group                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     go to head                           yregex_rule__by_cursor      YDLST_DHEAD      , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to prev (boom)                    yregex_rule__by_cursor      YDLST_DPREV      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to next (boom)                    yregex_rule__by_cursor      YDLST_DNEXT      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to head                           yregex_rule__by_cursor      YDLST_DHEAD      , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to next                           yregex_rule__by_cursor      YDLST_DNEXT      , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     a                                                                                                    
     exec     go to tail                           yregex_rule__by_cursor      YDLST_DTAIL      , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     o                                                                                                    
     exec     go to next (boom)                    yregex_rule__by_cursor      YDLST_DNEXT      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to prev (boom)                    yregex_rule__by_cursor      YDLST_DPREV      , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to tail                           yregex_rule__by_cursor      YDLST_DTAIL      , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     o                                                                                                    
     exec     go to prev                           yregex_rule__by_cursor      YDLST_DPREV      , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     twenty                                                                                               

   COND       attempt to index on a group                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     go to negative                       yregex_rule__by_index       -2               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to first                          yregex_rule__by_index       0                , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     test                                                                                                 
     exec     go to third                          yregex_rule__by_index       2                , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     zero                                                                                                 
     exec     go to fifth                          yregex_rule__by_index       4                , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     o                                                                                                    
     exec     go beyond end                        yregex_rule__by_index       6                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify cursor grounded           - - - - - - - - - - - - -   x_curr                                                                                                p_equal     NULL                                                                                                 
     exec     go to current                        yregex_rule__by_index       -1               , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify cursor                    - - - - - - - - - - - - -   x_curr->str                                                                                           s_equal     o                                                                                                    

   COND       verify program teardown purges                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify identifying rule endpoints                           yregex_rule__ends                                                                                     ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   int    x_rpos        = 0;                                                                                                                                                                                                  
     local    create working variable              - - - - - - - - - - - - -   char   x_group       = 0;                                                                                                                                                                                                  
     local    create working variable              - - - - - - - - - - - - -   char   x_fancy      [LEN_HUND] = "";                                                                                                                                                                                       
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       verify a short rule                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<2)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1<2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call the rule endpoind finder        yregex_rule__ends           &x_rpos        , &x_group                                                                             i_equal     2                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    
     echo     ... check main group                 - - - - - - - - - - - - -   x_group                                                                                               i_equal     1                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                             
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1<2))%sæ", BOLD_GRN, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       attempt without a open parenthesis                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "abba;1<2)"                                                                                           i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 11 [(abba;1<2))                                  ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 5;                                                                                                                                                                                                                
     exec     call the rule endpoind finder        yregex_rule__ends           &x_rpos        , &x_group                                                                             i_lesser    4                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     echo     ... check main group                 - - - - - - - - - - - - -   x_group                                                                                               i_lesser    0                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          4   1  19åno open parenthesisæ                          
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s(abb%s%sa%s%s;1<2))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       attempt with nested grouping                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<(2))"                                                                                            i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 10 [((;1<(2)))                                   ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call the rule endpoind finder        yregex_rule__ends           &x_rpos        , &x_group                                                                             i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    
     echo     ... check main group                 - - - - - - - - - - - - -   x_group                                                                                               i_lesser    0                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          5   1  21åno nested parenthesisæ                          
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1<%s%s(%s%s2)))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       verify parens inside set                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;5[a()b])"                                                                                          i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 12 [((;5[a()b]))                                 ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call the rule endpoind finder        yregex_rule__ends           &x_rpos        , &x_group                                                                             i_equal     6                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    
     echo     ... check main group                 - - - - - - - - - - - - -   x_group                                                                                               i_equal     5                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                             
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;5[a()b]))%sæ", BOLD_GRN, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       attempt with bad main group                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;X<2)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;X<2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call the rule endpoind finder        yregex_rule__ends           &x_rpos        , &x_group                                                                             i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     3                                                                                                    
     echo     ... check main group                 - - - - - - - - - - - - -   x_group                                                                                               i_lesser    0                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          3   1  32åalphabetic group number [a-zA-Z]æ               
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;%s%sX%s%s<2))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       verify program teardown purges                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify identifying rule operator                            yregex_rule__operator                                                                                 ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   int    x_rpos        = 0;                                                                                                                                                                                                  
     local    create working variable              - - - - - - - - - - - - -   char   x_fancy      [LEN_HUND] = "";                                                                                                                                                                                       
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       verify a simple, 1-char operator                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<2)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1<2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call the operator identification     yregex_rule__operator       &x_rpos                                                                                               i_equal     G_KEY_LT                                                                                             
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                             
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1<2))%sæ", BOLD_GRN, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       attempt an invalid 1-char operator                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1-2)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1-2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call the operator identification     yregex_rule__operator       &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          4   1  25ånot valid operator (=!<>)æ                    
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1%s%s-%s%s2))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       attempt a simple space                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1 2)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1 2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call the operator identification     yregex_rule__operator       &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          4   1  25ånot valid operator (=!<>)æ                    
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1%s%s %s%s2))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       attempt just an equal (valid in 2-char, not 1-char)                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1=2)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1=2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call the operator identification     yregex_rule__operator       &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          4   1  28åinvalid 1-char operator (<>)æ                 
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1%s%s=%s%s2))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a simple equality                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1==2)"                                                                                             i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1==2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call the operator identification     yregex_rule__operator       &x_rpos                                                                                               i_equal     G_KEY_EQ                                                                                             
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                             
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1==2))%sæ", BOLD_GRN, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       attempt a invalid 2-char operator                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1+=2)"                                                                                             i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1+=2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 3;                                                                                                                                                                                                                
     exec     call the operator identification     yregex_rule__operator       &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     3                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          3   1  25ånot valid operator (=!<>)æ                        
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;%s%s1%s%s+=2))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       attempt a position sooner                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1==2)"                                                                                             i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1==2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 3;                                                                                                                                                                                                                
     exec     call the operator identification     yregex_rule__operator       &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     3                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          3   1  25ånot valid operator (=!<>)æ                    
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;%s%s1%s%s==2))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       attempt a position later                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1==2)"                                                                                             i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1==2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 5;                                                                                                                                                                                                                
     exec     call the operator identification     yregex_rule__operator       &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          5   1  28åinvalid 1-char operator (<>)æ                 
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1=%s%s=%s%s2))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a simple non-equality                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1!=2)"                                                                                             i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1!=2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call the operator identification     yregex_rule__operator       &x_rpos                                                                                               i_equal     G_CHAR_NE                                                                                            
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                             
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1!=2))%sæ", BOLD_GRN, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       verify program teardown purges                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify identifying group numbers                            yregex_rule__group                                                                                    ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   int    x_rpos        = 0;                                                                                                                                                                                                  
     local    create working variable              - - - - - - - - - - - - -   char   x_fancy      [LEN_HUND] = "";                                                                                                                                                                                       
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       verify the initial group number                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<2)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1<2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 3;                                                                                                                                                                                                                
     exec     call the group identification        yregex_rule__group          &x_rpos                                                                                               i_equal     1                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                             
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1<2))%sæ", BOLD_GRN, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       attempt a alphabetic group number                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;a<2)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;a<2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 3;                                                                                                                                                                                                                
     exec     call the group identification        yregex_rule__group          &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     3                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          3   1  32åalphabetic group number [a-zA-Z]æ             
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;%s%sa%s%s<2))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       verify the second group number                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<2)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1<2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 5;                                                                                                                                                                                                                
     exec     call the group identification        yregex_rule__group          &x_rpos                                                                                               i_equal     2                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                             
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1<2))%sæ", BOLD_GRN, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       attempt a symbolic group number                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<*)"                                                                                              i_equal     0                                                                                                    
     get      ... check regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1<*))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 5;                                                                                                                                                                                                                
     exec     call the group identification        yregex_rule__group          &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     ... check updated position           - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     get      ... verify error count               yregex_error__unit          "count"        , 0                                                                                    s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... verify error content             yregex_error__unit          "entry"        , 0                                                                                    s_equal     ERROR entry ( 0) : F  4å#RULæ          5   1  34åsymbolic group number [^0-9a-zA-Z]æ             
     exec     create fancy version                 yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s((;1<%s%s*%s%s))%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                        

   COND       verify program teardown purges                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify detailed compiling of rules                          yregex_rule_comp                                                                                      ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create a position indicator          - - - - - - - - - - - - -   int    x_rpos        = 0;                                                                                                                                                                                                  
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       verify with just groups, no rule                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(#two)"                                                                                        i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 14 [((#one)(#two))                               ]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 12 [((one)(two))                                 ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 12 [.1   12   2.                                 ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 12 [00    0                                      ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 12 [b4    4                                      ]                                

   COND       verify with 1-char group comparision                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(#two)(;1<2)"                                                                                  i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 20 [((#one)(#two)(;1<2))                         ]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 15 [((one)(two)(;))                              ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 15 [.1   12   2a1a.                              ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 15 [00    0    0<                                ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 15 [e4    4    22                                ]                                

   COND       attempt with 1-char group comparision                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(#two)(;1=2)"                                                                                  i_lesser    0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 20 [((#one)(#two)(;1=2))                         ]                                

   COND       verify with 2-char group comparision                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(#two)(;1==2)"                                                                                 i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 21 [((#one)(#two)(;1==2))                        ]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 15 [((one)(two)(;))                              ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 15 [.1   12   2a1a.                              ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 15 [00    0    0=                                ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 15 [e4    4    22                                ]                                

   COND       attempt with bad 2-char group comparision                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(#two)(;1=#2)"                                                                                 i_lesser    0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 21 [((#one)(#two)(;1=#2))                        ]                                

   COND       verify with backslash set check                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(;1\\l)"                                                                                       i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 14 [((#one)(;1\\l))                               ]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 10 [((one)(;))                                   ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 10 [.1   1a1a.                                   ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 10 [00    0[                                     ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 10 [94    27                                     ]                                

   COND       verify with posix set check                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(;1[:alpha:])"                                                                                 i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 21 [((#one)(;1[:alpha:]))                        ]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 10 [((one)(;))                                   ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 10 [.1   1a1a.                                   ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 10 [00    0[                                     ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 10 [94    2b                                     ]                                

   COND       verify with custom set                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(;1[a-e])"                                                                                     i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 17 [((#one)(;1[a-e]))                            ]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 10 [((one)(;))                                   ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 10 [.1   1a1a.                                   ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 10 [00    0[                                     ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 10 [94    2p                                     ]                                

   COND       verify with inverse set                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(;1[^w-z])"                                                                                    i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 18 [((#one)(;1[^w-z]))                           ]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 10 [((one)(;))                                   ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 10 [.1   1a1a.                                   ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 10 [00    0]                                     ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 10 [94    2p                                     ]                                

   COND       verify with substr match                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#one)(;1+on)"                                                                                       i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 15 [((#one)(;1+on))                              ]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 10 [((one)(;))                                   ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 10 [.1   1a1a.                                   ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 10 [00    0+                                     ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 10 [94    20                                     ]                                

   COND       verify with substr match                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#four hundred twenty-one)(;1-twenty)"                                                               i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 39 [((#four hundred twenty-one)(;1-twenty))      ]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 30 [((four hundred twenty-one)(;))               ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 30 [.1                       1a1a.               ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 30 [00                        0-                 ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 30 [to                        20                 ]                                

   COND       verify with regex match                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#four hundred twenty-one)(;1&..byte)"                                                               i_lesser    0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 39 [((#four hundred twenty-one)(;1&..byte))      ]                                

   COND       verify program teardown purges                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify rule execution                                       yregex_rule_comp, yregex_rule_exec                                                                    ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    hold a common source string          - - - - - - - - - - - - -   char   x_test        [LEN_HUND] = "black brown blub blued blue redd4y red redish green gr#e1n gre2n";                                                                                                                      

   COND       run without limits                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)"                                                                                               i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     12                                                                                                   

   COND       run on a backslash                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1\\d)"                                                                                        i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     3                                                                                                    

   COND       run on a backslash (fail)                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1\\g)"                                                                                        i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     0                                                                                                    

   COND       run on a custom set                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])"                                                                                       i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     7                                                                                                    

   COND       run with two set rules                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1\\d)"                                                                                i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     2                                                                                                    

   COND       run with two custom sets (fail)                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1[k])"                                                                                i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     0                                                                                                    

   COND       run with two custom sets                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1[w])"                                                                                i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     1                                                                                                    

   COND       run with a inverse set                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[^gr])"                                                                                      i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     5                                                                                                    

   COND       run with a contrary matches                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1[^gr])"                                                                              i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     0                                                                                                    

   COND       run with a second inverse set                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1[^nyk])"                                                                             i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     3                                                                                                    

   COND       run with substring                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1+lu)"                                                                                        i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     3                                                                                                    

   COND       run with not-substring                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1-ed)"                                                                                        i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     8                                                                                                    

   COND       verify program teardown purges                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the rule count                yregex_rule__unit           "count"          , 0                                                                                  s_equal     RULE count       : num=   0, fore=   0, back=   0                                                    
     get      review the rule list                 yregex_rule__unit           "list"           , 0                                                                                  s_equal     RULE list        : num=   0, head=(nil)     , tail=(nil)                                             



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify group number extraction                              yregex_rule__group, yregex_rule_comp, yregex_rule                                                     ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create a position indicator          - - - - - - - - - - - - -   int    x_rpos        = 0;                                                                                                                                                                                                  

   GROUP      check using direct interface                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize with simple sets                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1==2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1==2))                                    ]                                

   COND       first group                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 3;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__group          &x_rpos                                                                                               i_equal     1                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    

   COND       second group                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 6;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__group          &x_rpos                                                                                               i_equal     2                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     7                                                                                                    

   COND       initialize with focus group                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;5==9)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;5==9))                                    ]                                

   COND       first group                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 3;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__group          &x_rpos                                                                                               i_equal     5                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    

   COND       second group                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 6;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__group          &x_rpos                                                                                               i_equal     9                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     7                                                                                                    

   COND       initialize with bad sets                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;a==#)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;a==#))                                    ]                                

   COND       first group                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 3;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__group          &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     3                                                                                                    

   COND       second group                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 6;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__group          &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    

   COND       initialize with good sets, again                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1==2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1==2))                                    ]                                

   COND       before first  group                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__group          &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     2                                                                                                    

   COND       before second group                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__group          &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    

   COND       after second group                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 7;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__group          &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     7                                                                                                    

   GROUP      check using rule compiling interface                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       run on two good groups                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1==2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1==2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [=                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [2                                            ]                                

   COND       use a specialty group                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;0==5)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;0==5))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [0                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [=                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [5                                            ]                                

   COND       bad first group                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;w==1)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;w==1))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     3                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  0 [                                             ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  0 [                                             ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  0 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  0 [                                             ]                                

   COND       bad second group                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;0==a)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;0==a))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  0 [                                             ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  0 [                                             ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  0 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  0 [                                             ]                                

   GROUP      complete                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify comparision operator extraction                      yregex_rule__operator, yregex_rule_comp, yregex_r                                                     ((02.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create a position indicator          - - - - - - - - - - - - -   int    x_rpos        = 0;                                                                                                                                                                                                  
     local    hold a common source string          - - - - - - - - - - - - -   char   x_test        [LEN_HUND] = "red blue green brown red brown blue red";                                                                                                                                               

   COND       extract an equality                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1==2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1==2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__operator       &x_rpos                                                                                               i_equal     '='                                                                                                  
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    

   COND       extract an inequality                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1!=2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1!=2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__operator       &x_rpos                                                                                               i_equal     (unsigned char ) 'Þ'                                                                                 
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    

   COND       try a bad operator                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1#=2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1#=2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__operator       &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    

   COND       extract an less than                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<2)"                                                                                              i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1<2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__operator       &x_rpos                                                                                               i_equal     '<'                                                                                                  
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    

   COND       extract an less than or equal to                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<=2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1<=2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__operator       &x_rpos                                                                                               i_equal     (unsigned char) 'Ü'                                                                                  
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    

   COND       try a number                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;12)"                                                                                               i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  7 [((;12))                                      ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__operator       &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    

   COND       extract an greater than                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1>2)"                                                                                              i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1>2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__operator       &x_rpos                                                                                               i_equal     '>'                                                                                                  
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    

   COND       extract an greater than or equal to                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1>=2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1>=2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 4;                                                                                                                                                                                                                
     exec     call group interpreter               yregex_rule__operator       &x_rpos                                                                                               i_equal     (unsigned char) 'Ý'                                                                                  
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    

   GROUP      check using rule compiling interface                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       run on an equality                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1==2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1==2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [=                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [2                                            ]                                

   COND       run on an inequality                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1!=2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1!=2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [Þ                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [2                                            ]                                

   COND       fail on an assignment                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1=2)"                                                                                              i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1=2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  0 [                                             ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  0 [                                             ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  0 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  0 [                                             ]                                

   COND       fail on backwards non-equality                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1=!2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1=!2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     4                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  0 [                                             ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  0 [                                             ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  0 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  0 [                                             ]                                

   COND       run on less than                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<2)"                                                                                              i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1<2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [<                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [2                                            ]                                

   COND       run on a less than or equal to                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<=2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1<=2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [Ü                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [2                                            ]                                

   COND       fail on a shift                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1<<2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1<<2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  0 [                                             ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  0 [                                             ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  0 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  0 [                                             ]                                

   COND       run on greater than                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1>2)"                                                                                              i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1>2))                                     ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [>                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [2                                            ]                                

   COND       run on a greater than or equal to                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1>=2)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  9 [((;1>=2))                                    ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     6                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [Ý                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [2                                            ]                                

   GROUP      check using full compilation interface                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       run on an equality                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;1==2)"                                                                                             i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  5 [((;))                                        ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  5 [.a1a.                                        ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  5 [00=                                          ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  5 [422                                          ]                                

   COND       run on a extended characters                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "º1Þ2»"                                                                                               i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  5 [((;))                                        ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  5 [.a1a.                                        ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  5 [00Þ                                          ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  5 [422                                          ]                                

   COND       run on an equality, no final paren                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;1==2."                                                                                             i_lesser    0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  2 [((                                           ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  2 [.a                                           ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  2 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  2 [                                             ]                                

   COND       run on an assignment                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;1=2)"                                                                                              i_lesser    0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  2 [((                                           ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  2 [.a                                           ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  2 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  2 [                                             ]                                

   COND       run on a bad group id                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;1==b)"                                                                                             i_lesser    0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  2 [((                                           ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  2 [.a                                           ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  2 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  2 [                                             ]                                

   COND       run on an empty rule                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.024))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;)"                                                                                                 i_lesser    0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  2 [((                                           ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  2 [.a                                           ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  2 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  2 [                                             ]                                

   GROUP      execute the capture group matching                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       start with one capture group                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.025))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#red)"                                                                                              i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  7 [((red))                                      ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  7 [.1   1.                                      ]                                
     get      get current indx                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  7 [00                                           ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  7 [64                                           ]                                
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     3                                                                                                    

   COND       add a spacer                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.026))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#red).*"                                                                                            i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  8 [((red)[)                                     ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  8 [.1   1a.                                     ]                                
     get      get current indx                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  8 [00    *                                      ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  8 [74                                           ]                                
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_greater   0                                                                                                    

   COND       now another capture group                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.027))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#red).*(#&w)"                                                                                       i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 14 [((red)[(<[[>))                               ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 14 [.1   1a255552.                               ]                                
     get      get current indx                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 14 [00    *0  *                                  ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 14 [d4     5                                     ]                                
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     10                                                                                                   

   COND       add a rule to match the two groups                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.028))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#red).*(#&w)(;1==2)"                                                                                i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 17 [((red)[(<[[>)(;))                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 17 [.1   1a255552a1a.                            ]                                
     get      get current indx                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 17 [00    *0  *  0=                              ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 17 [g4     5     22                              ]                                
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     2                                                                                                    

   COND       add a rule to force the grougs to be different                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.029))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#red).*(#&w)(;1!=2)"                                                                                i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 17 [((red)[(<[[>)(;))                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 17 [.1   1a255552a1a.                            ]                                
     get      get current indx                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 17 [00    *0  *  0Þ                              ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 17 [g4     5     22                              ]                                
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     7                                                                                                    

   COND       find both red and blue                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.030))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#red|blue).*(#&1)"                                                                                  i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     10                                                                                                   

   COND       find both red and blue, matched                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.031))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#red|blue).*(#&1)(;1==2)"                                                                           i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     4                                                                                                    

   COND       find both red and blue, not-matched                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.032))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#red|blue).*(#&1)(;1!=2)"                                                                           i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     6                                                                                                    

   COND       find three colors, less-than match                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.033))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#red|brown|blue).*(#&1)(;1<2)"                                                                      i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     8                                                                                                    

   GROUP      complete                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((02.034))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify set matches                                          yregex_rule_comp, yregex_rule_exec                                                                    ((03.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create a position indicator          - - - - - - - - - - - - -   int    x_rpos        = 0;                                                                                                                                                                                                  
     local    hold a common source string          - - - - - - - - - - - - -   char   x_test        [LEN_HUND] = "black brown blub blued blue redd4y red redish green gr#e1n gre2n";                                                                                                                      

   GROUP      check abbreviated sets using rule compiling interface              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       run on a common set                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1\\d)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1\\d))                                     ]                               
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [[                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [6                                            ]                                

   COND       run on a less common set                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1\\G)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1\\G))                                     ]                               
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [[                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [o                                            ]                                

   COND       run on a non-existant set                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1\\y)"                                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       :  8 [((;1\\y))                                     ]                               
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_lesser    0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     5                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  0 [                                             ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  0 [                                             ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  0 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  0 [                                             ]                                

   GROUP      check posix sets using rule compiling interface                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       run on a common set                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1[:alpha:])"                                                                                       i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 15 [((;1[:alpha:]))                              ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     12                                                                                                   
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [[                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [b                                            ]                                

   COND       run on a non-existant set (makes a custom set)                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1[:aleph:])"                                                                                       i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 15 [((;1[:aleph:]))                              ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     12                                                                                                   
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [[                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [p                                            ]                                

   COND       run on a custom set                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yregex_comp__prep           "(;1[m-zA-Q123.,:])"                                                                                  i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 20 [((;1[m-zA-Q123.,:]))                         ]                                
     code     assign the position                  - - - - - - - - - - - - -   x_rpos = 2;                                                                                                                                                                                                                
     exec     call rule compilier                  yregex_rule_comp            &x_rpos                                                                                               i_equal     0                                                                                                    
     echo     get updated position                 - - - - - - - - - - - - -   x_rpos                                                                                                i_equal     17                                                                                                   
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  1 [;                                            ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  1 [1                                            ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  1 [[                                            ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  1 [p                                            ]                                

   GROUP      check using full compilation interface                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       run on a common set                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;1\\d)"                                                                                             i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  5 [((;))                                        ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  5 [.a1a.                                        ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  5 [00[                                          ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  5 [426                                          ]                                

   COND       run on a non-existant set                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;1\\y)"                                                                                             i_lesser    0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  2 [((                                           ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  2 [.a                                           ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  2 [                                             ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  2 [                                             ]                                

   COND       run on a extended characters                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "º1\\d»"                                                                                              i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  5 [((;))                                        ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  5 [.a1a.                                        ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  5 [00[                                          ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  5 [426                                          ]                                

   COND       run on a posix set                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;1[:digit:])"                                                                                       i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  5 [((;))                                        ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  5 [.a1a.                                        ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  5 [00[                                          ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  5 [426                                          ]                                

   COND       run on a custom set                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;1[m-zA-Q123.,:])"                                                                                  i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  5 [((;))                                        ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  5 [.a1a.                                        ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  5 [00[                                          ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  5 [42p                                          ]                                

   COND       run on an inverse set                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(;1[^gr])"                                                                                           i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        :  5 [((;))                                        ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        :  5 [.a1a.                                        ]                                
     get      get current mods                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        :  5 [00]                                          ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        :  5 [42p                                          ]                                

   GROUP      execute the full set matching                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       run without limits                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)"                                                                                               i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     12                                                                                                   

   COND       run on a backslash                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1\\d)"                                                                                        i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     3                                                                                                    

   COND       run on a backslash (fail)                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1\\g)"                                                                                        i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     0                                                                                                    

   COND       run on a custom set                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])"                                                                                       i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     7                                                                                                    

   COND       run with two set rules                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1\\d)"                                                                                i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     2                                                                                                    

   COND       run with two custom sets (fail)                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1[k])"                                                                                i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     0                                                                                                    

   COND       run with two custom sets                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1[w])"                                                                                i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     1                                                                                                    

   COND       run with a inverse set                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[^gr])"                                                                                      i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     5                                                                                                    

   COND       run with a contrary matches                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1[^gr])"                                                                              i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     0                                                                                                    

   COND       run with a second inverse set                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.023))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call the regex initialization        yREGEX_comp                 "(#&w)(;1[gr])(;1[^nyk])"                                                                             i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     3                                                                                                    

   GROUP      complete                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.024))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (RULE) verify substring matches                                    yregex_rule_comp, yregex_rule_exec                                                                    ((04.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create a position indicator          - - - - - - - - - - - - -   int    x_rpos        = 0;                                                                                                                                                                                                  
     local    hold a common source string          - - - - - - - - - - - - -   char   x_test        [LEN_HUND] = "black brown blub blued blue redd4y red redish green gr#e1n gre2n";                                                                                                                      

   GROUP      check using full compilation interface                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add a rule to check for character                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#&w)(;1+e)"                                                                                         i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 11 [((<[[>)(;))                                  ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 11 [.155551a1a.                                  ]                                
     get      get current indx                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 11 [00  *  0+                                    ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 11 [a5     20                                    ]                                

   COND       add a rule to check for short string                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#&w)(;1+edy)"                                                                                       i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 11 [((<[[>)(;))                                  ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 11 [.155551a1a.                                  ]                                
     get      get current indx                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 11 [00  *  0+                                    ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 11 [a5     20                                    ]                                

   COND       add a rule to check for short string                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#&w)(;1-ed)"                                                                                        i_equal     0                                                                                                    
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 11 [((<[[>)(;))                                  ]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 11 [.155551a1a.                                  ]                                
     get      get current indx                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 11 [00  *  0-                                    ]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 11 [a5     20                                    ]                                

   GROUP      execute the full set matching                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       add a rule to check for character                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#&w)(;1+e)"                                                                                         i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     8                                                                                                    

   COND       add a rule to check for absence of character                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#&w)(;1-u)"                                                                                         i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     9                                                                                                    

   COND       add a rule to check for short string (fail)                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#&w)(;1+edy)"                                                                                       i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     0                                                                                                    

   COND       add a rule to check for short string                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#&w)(;1+ed)"                                                                                        i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     4                                                                                                    

   COND       add a rule to check for absence of short string                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     compile the regex                    yREGEX_comp                 "(#&w)(;1-ed)"                                                                                        i_equal     0                                                                                                    
     exec     execute the matching                 yREGEX_debug                x_test                                                                                                i_equal     8                                                                                                    

   GROUP      complete                                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    



# end-of-file.  done, finito, completare, whimper [Ï´···
