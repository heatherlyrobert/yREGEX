#!/usr/local/bin/koios
#   koios-polos (axis of heaven) unit testing meta-language



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
PREP          include the prototype headers                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       include public header                yREGEX.h                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       include private header               yREGEX_priv.h               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (PATS) verify pattern allocation and freeing                       yregex_pats__new, yregex_pats__free, yregex_pats__purge                                               ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       prepare for run                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     initialize the system                yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   void *x_head = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   void *x_next = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   void *x_save = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   void *x_plus = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   void *x_last = NULL;                                                                                                                                                                                                       
     local    create working variable              - - - - - - - - - - - - -   char  x_custom [LEN_HUND] = "";                                                                                                                                                                                            

   COND       verify program setup initializes                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     PATS list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       add a first                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a list                           yregex_pats__new            &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is assigned       - - - - - - - - - - - - -   x_head                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_pats__memory         x_head                                                                                                s_equal     å_.___.__.__æ                                                                                          
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   1, fore=   1, back=   1                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   1, head=%-10p, tail=%p", x_head, x_head);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       delete the first                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delet a pattern                      yregex_pats__free           &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is grounded       - - - - - - - - - - - - -   x_head                                                                                                p_equal     NULL                                                                                                 
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     PATS list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       add first, again                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a list                           yregex_pats__new            &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is assigned       - - - - - - - - - - - - -   x_head                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_pats__memory         x_head                                                                                                s_equal     å_.___.__.__æ                                                                                          
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   1, fore=   1, back=   1                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   1, head=%-10p, tail=%p", x_head, x_head);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       try to add into a taken pointer                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a list                           yregex_pats__new            &x_head                                                                                               i_lesser    0                                                                                                    

   COND       try to add into null pointer                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a list                           yregex_pats__new            NULL                                                                                                  i_lesser    0                                                                                                    

   COND       try to free a empty pointer                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.008))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delet a pattern                      yregex_pats__free           &x_next                                                                                               i_lesser    0                                                                                                    

   COND       try to free a null pointer                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.009))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delet a pattern                      yregex_pats__free           NULL                                                                                                  i_lesser    0                                                                                                    

   COND       add another                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a list                           yregex_pats__new            &x_next                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is assigned       - - - - - - - - - - - - -   x_next                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_pats__memory         x_next                                                                                                s_equal     å_.___.__.X_æ                                                                                          
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   2, fore=   2, back=   2                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   2, head=%-10p, tail=%p", x_head, x_next);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       and a third                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a list                           yregex_pats__new            &x_save                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is assigned       - - - - - - - - - - - - -   x_save                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_pats__memory         x_save                                                                                                s_equal     å_.___.__.X_æ                                                                                          
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   3, fore=   3, back=   3                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   3, head=%-10p, tail=%p", x_head, x_save);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       and a forth                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.012))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a list                           yregex_pats__new            &x_last                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is assigned       - - - - - - - - - - - - -   x_last                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_pats__memory         x_last                                                                                                s_equal     å_.___.__.X_æ                                                                                          
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   4, fore=   4, back=   4                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   4, head=%-10p, tail=%p", x_head, x_last);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       and then a final                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.013))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a list                           yregex_pats__new            &x_plus                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is assigned       - - - - - - - - - - - - -   x_plus                                                                                                p_not       NULL                                                                                                 
     exec     ... verify wiping                    yregex_pats__memory         x_plus                                                                                                s_equal     å_.___.__.X_æ                                                                                          
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   5, fore=   5, back=   5                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   5, head=%-10p, tail=%p", x_head, x_plus);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       check full list                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.014))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     ... verify memory                    yregex_pats__memory         x_head                                                                                                s_equal     å_.___.__._Xæ                                                                                          
     exec     ... verify memory                    yregex_pats__memory         x_next                                                                                                s_equal     å_.___.__.XXæ                                                                                          
     exec     ... verify memory                    yregex_pats__memory         x_save                                                                                                s_equal     å_.___.__.XXæ                                                                                          
     exec     ... verify memory                    yregex_pats__memory         x_last                                                                                                s_equal     å_.___.__.XXæ                                                                                          
     exec     ... verify memory                    yregex_pats__memory         x_plus                                                                                                s_equal     å_.___.__.X_æ                                                                                          

   COND       delete a middle                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.015))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delet a pattern                      yregex_pats__free           &x_save                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is grounded       - - - - - - - - - - - - -   x_save                                                                                                p_equal     NULL                                                                                                 
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   4, fore=   4, back=   4                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   4, head=%-10p, tail=%p", x_head, x_plus);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       delete the tail                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.016))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delet a pattern                      yregex_pats__free           &x_plus                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is grounded       - - - - - - - - - - - - -   x_plus                                                                                                p_equal     NULL                                                                                                 
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   3, fore=   3, back=   3                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   3, head=%-10p, tail=%p", x_head, x_last);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       delete the head                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.017))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     delet a pattern                      yregex_pats__free           &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is grounded       - - - - - - - - - - - - -   x_head                                                                                                p_equal     NULL                                                                                                 
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   2, fore=   2, back=   2                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   2, head=%-10p, tail=%p", x_next, x_last);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       add another                                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.018))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     add a list                           yregex_pats__new            &x_head                                                                                               i_equal     0                                                                                                    
     echo     ... verify pattern is assigned       - - - - - - - - - - - - -   x_head                                                                                                p_not       NULL                                                                                                 
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   3, fore=   3, back=   3                                                    
     code     create a custom expect string        - - - - - - - - - - - - -   sprintf (x_custom, "PATS list        : num=   3, head=%-10p, tail=%p", x_next, x_head);                                                                                                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     [[ x_custom ]]                                                                                       

   COND       check full list                                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.019))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     ... verify memory                    yregex_pats__memory         x_head                                                                                                s_equal     å_.___.__.X_æ                                                                                          
     exec     ... verify memory                    yregex_pats__memory         x_next                                                                                                s_equal     å_.___.__._Xæ                                                                                          
     exec     ... verify memory                    yregex_pats__memory         x_save                                                                                                s_equal     n/a                                                                                                  
     exec     ... verify memory                    yregex_pats__memory         x_last                                                                                                s_equal     å_.___.__.XXæ                                                                                          
     exec     ... verify memory                    yregex_pats__memory         x_plus                                                                                                s_equal     n/a                                                                                                  

   COND       purge all                                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.020))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     purge                                yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     PATS list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       purge all, on empty list                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.021))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     purge                                yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     PATS list        : num=   0, head=(nil)     , tail=(nil)                                             

   COND       verify program teardown purges                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.022))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     wrap-up the program                  yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    
     get      review the pattern list              yregex_pats__unit           "list"           , 0                                                                                  s_equal     PATS list        : num=   0, head=(nil)     , tail=(nil)                                             



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (PATS) verify adding base and creating new patterns                yregex_pats__base, yregex_pats__save                                                                  ((03.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    

   COND       verify empty setup                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    

   COND       verify adding the base                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     copy base                            yregex_pats__base                                                                                                                 i_equal     0                                                                                                    
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=  18, fore=  18, back=  18                                                    

   COND       purge everything                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     run purge                            yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    

   COND       verify adding the base                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     copy base                            yregex_pats__base                                                                                                                 i_equal     0                                                                                                    
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=  18, fore=  18, back=  18                                                    

   COND       attempt to duplicate                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     copy base                            yregex_pats__base                                                                                                                 i_equal     0                                                                                                    
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=  18, fore=  18, back=  18                                                    

   COND       purge everything                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     run purge                            yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    

   COND       verify adding numbered group                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     copy base                            yregex_pats__save           "(+|-)?(0|[1-9][0-9]*)"                                 , 2                                           i_equal     0                                                                                                    
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   1, fore=   1, back=   1                                                    

   COND       purge everything                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     run purge                            yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (PATS) verify searching and cursoring patterns                     yregex_pats__by_abbr, yregex_pats__by_name, yregex_pats__by_index                                     ((04.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   tPATS  *x_curr       = NULL;                                                                                                                                                                                               
     local    create working variable              - - - - - - - - - - - - -   tPATS  *x_0th        = NULL;                                                                                                                                                                                               
     local    create working variable              - - - - - - - - - - - - -   tPATS  *x_6th        = NULL;                                                                                                                                                                                               
     local    create working variable              - - - - - - - - - - - - -   tPATS  *x_13th       = NULL;                                                                                                                                                                                               
     local    create working variable              - - - - - - - - - - - - -   tPATS  *x_19th       = NULL;                                                                                                                                                                                               
     local    create working variable              - - - - - - - - - - - - -   tPATS  *x_24th       = NULL;                                                                                                                                                                                               
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    

   GROUP      attempt finds before base loaded                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       check standard abbreviations                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set abbreviation               yregex_pats__by_abbr        'b'              , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check set abbreviation               yregex_pats__by_abbr        'i'              , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check set abbreviation               yregex_pats__by_abbr        'w'              , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    

   COND       check standard names                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set name                       yregex_pats__by_name        "phone"          , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check set name                       yregex_pats__by_name        "email"          , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check set name                       yregex_pats__by_name        "exten"          , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    

   COND       check a range of indecies                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check by index                       yregex_pats__by_index       -1               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check by index                       yregex_pats__by_index       0                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check by index                       yregex_pats__by_index       6                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check by index                       yregex_pats__by_index       13               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check by index                       yregex_pats__by_index       17               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check by index                       yregex_pats__by_index       18               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    

   GROUP      verify finds after base loaded                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       verify adding the base                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     copy base                            yregex_pats__base                                                                                                                 i_equal     0                                                                                                    
     get      review the set count                 yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=  18, fore=  18, back=  18                                                    

   COND       check standard abbreviations                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set abbreviation               yregex_pats__by_abbr        'b'              , &x_curr                                                                            i_equal     1                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     byte                                                                                                 
     exec     check set abbreviation               yregex_pats__by_abbr        'w'              , &x_curr                                                                            i_equal     3                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     word                                                                                                 
     exec     check set abbreviation               yregex_pats__by_abbr        'F'              , &x_curr                                                                            i_equal     4                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     field                                                                                                

   COND       check return can be left empty                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set abbreviation               yregex_pats__by_abbr        'b'              , NULL                                                                               i_equal     1                                                                                                    

   COND       attempt non-existant abbreviations                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set abbreviation               yregex_pats__by_abbr        'q'              , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    

   COND       attempt illegal abbreviations                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set abbreviation               yregex_pats__by_abbr        '-'              , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check set abbreviation               yregex_pats__by_abbr        0                , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    

   COND       check standard names                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set name                       yregex_pats__by_name        "byte"           , &x_curr                                                                            i_equal     1                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     byte                                                                                                 
     exec     check set name                       yregex_pats__by_name        "email"          , &x_curr                                                                            i_greater   0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     email                                                                                                
     exec     check set name                       yregex_pats__by_name        "exten"          , &x_curr                                                                            i_greater   0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     exten                                                                                                

   COND       verify return can be null                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set name                       yregex_pats__by_name        "byte"           , NULL                                                                               i_equal     1                                                                                                    

   COND       attempt capital versions                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set name                       yregex_pats__by_name        "BYTE"           , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check set name                       yregex_pats__by_name        "EMAIL"          , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    

   COND       attempt missing entries                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set name                       yregex_pats__by_name        "whatnot"        , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check set name                       yregex_pats__by_name        "tremble"        , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    

   COND       attempt illegal versions                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check set name                       yregex_pats__by_name        NULL             , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check set name                       yregex_pats__by_name        ""               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    

   COND       check a range of indecies                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     check by index                       yregex_pats__by_index       -1               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    
     exec     check by index                       yregex_pats__by_index       0                , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     float                                                                                                
     exec     check by index                       yregex_pats__by_index       6                , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     mypath                                                                                               
     exec     check by index                       yregex_pats__by_index       13               , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     basic                                                                                                
     exec     check by index                       yregex_pats__by_index       17               , &x_curr                                                                            i_equal     0                                                                                                    
     echo     ... verify return is correct         - - - - - - - - - - - - -   x_curr->name                                                                                          s_equal     string                                                                                               
     exec     check by index                       yregex_pats__by_index       18               , &x_curr                                                                            i_lesser    0                                                                                                    
     echo     ... verify return is grounded        - - - - - - - - - - - - -   x_curr                                                                                                p_null      0                                                                                                    

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (PATS) verify initial replacement run                              yregex_pats__replace                                                                                  ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     exec     load base                            yregex_pats__base                                                                                                                 i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   char  x_out    [LEN_REGEX] = "";                                                                                                                                                                                           
     local    create working variable              - - - - - - - - - - - - -   char   x_fancy      [LEN_HUND] = "";                                                                                                                                                                                       

   COND       verify a run without patterns                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "abcd"                                                                                                i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (abcd)                                                                                                
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify simple pattern                                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab(&w)ef"                                                                                            i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab(<µw+>)ef)                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       attempt without parenthesis                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab&w"                                                                                                i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab&w)                                                                                               
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a upfront pattern                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(&w)ef"                                                                                              i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     ((<µw+>)ef)                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       attempt in a numbered group                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab(#&w)ef"                                                                                           i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab(#<µw+>)ef)                                                                                       
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify correctly in numbered group                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab(#(&w))ef"                                                                                         i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab(#(<µw+>))ef)                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a trailing pattern                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab(&w)"                                                                                              i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab(<µw+>))                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a named pattern                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(#ab(&w))(&1)"                                                                                       i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     ((#ab(<µw+>))(&1))                                                                                        
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       attempt a non-existant abbr                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab(&q)ef"                                                                                            i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_lesser    0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab(&q)ef)                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : F  4å#PATæ          3   4  30åpattern abbreviation not foundæ                             
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s(ab%s%s(&q)%s%sef)%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a several close patterns                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab(&w)(&w)(&w)ef"                                                                                    i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab(<µw+>)(<µw+>)(<µw+>)ef)                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a full name pattern                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(&word)"                                                                                           i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     ((<µw+>))                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a tailing name pattern                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab(&word)"                                                                                           i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab(<µw+>))                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       attempt a non-grouped pattern                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab&word"                                                                                             i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab&word)                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a leading name pattern                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(&word)ef"                                                                                           i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     ((<µw+>)ef)                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       attempt a non-existant name                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "ab(&quick)"                                                                                          i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_lesser    0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     (ab(&quick))                                                                                       
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   1, fore=   1, back=   1                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : F  4å#PATæ          3   8  22åpattern name not foundæ                                     
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_lesser    0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s(ab%s%s(&quick)%s%s)%sæ", BOLD_GRN, BOLD_OFF, BOLD_ERR, BOLD_OFF, BOLD_MAG, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify inside a numbered group                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(#(&word))ef"                                                                                        i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     ((#(<µw+>))ef)                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify a couple named groups                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(&word)ef(&word)"                                                                                    i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     ((<µw+>)ef(<µw+>))                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       verify mix of abbr and named                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(&w)ef(&word)"                                                                                       i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     echo     ... verify return regex              - - - - - - - - - - - - -   myREGEX.regex                                                                                         s_equal     ((<µw+>)ef(<µw+>))                                                                                          
     get      review the error counts              yregex_error__unit          "count"          , 0                                                                                  s_equal     ERROR count      : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_error__unit          "entry"          , 0                                                                                  s_equal     ERROR entry ( 0) : -  -åæ              -   -   -åæ                                                           
     exec     fancify the error                    yregex_error_fancify                                                                                                              i_equal     0                                                                                                    
     code     prepare fancy                        - - - - - - - - - - - - -   sprintf (x_fancy, "ERROR fancy      : å%s%s%sæ", BOLD_GRN, myREGEX.regex, BOLD_OFF);                                                                                                                                                                          
     get      ... verify fancy version             yregex_error__unit          "fancy"        , 0                                                                                    s_equal     [[ x_fancy ]]                                                                                  

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (PATS) verify save run of named groups                             yregex_pats__named                                                                                    ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   char  x_out    [LEN_REGEX] = "";                                                                                                                                                                                           
     local    create working variable              - - - - - - - - - - - - -   char   x_fancy      [LEN_HUND] = "";                                                                                                                                                                                       

   COND       verify a run without named groups                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yregex_comp__prep           "testing"                                                                                             i_equal     0                                                                                                    
     exec     ... purge base                       yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     exec     call named run                       yregex_pats__named          myREGEX.regex                                                                                         i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_pats__unit           "entry"          , 0                                                                                  s_equal     PATS entry  ( 0) : -  -   -åæ             -åæ                                                           
     get      ... get entry                        yregex_pats__unit           "entry"          , 1                                                                                  s_equal     PATS entry  ( 1) : -  -   -åæ             -åæ                                                           
     get      ... get entry                        yregex_pats__unit           "entry"          , 2                                                                                  s_equal     PATS entry  ( 2) : -  -   -åæ             -åæ                                                           

   COND       verify a run with groups, but not named                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yregex_comp__prep           "ab(cd)(ef)gh"                                                                                        i_equal     0                                                                                                    
     exec     ... purge base                       yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     exec     call named run                       yregex_pats__named          myREGEX.regex                                                                                         i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    
     get      ... get entry                        yregex_pats__unit           "entry"          , 0                                                                                  s_equal     PATS entry  ( 0) : -  -   -åæ             -åæ                                                           
     get      ... get entry                        yregex_pats__unit           "entry"          , 1                                                                                  s_equal     PATS entry  ( 1) : -  -   -åæ             -åæ                                                           
     get      ... get entry                        yregex_pats__unit           "entry"          , 2                                                                                  s_equal     PATS entry  ( 2) : -  -   -åæ             -åæ                                                           

   COND       verify a run simple named group                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yregex_comp__prep           "ab(#cd)ef"                                                                                           i_equal     0                                                                                                    
     exec     ... purge base                       yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     exec     call named run                       yregex_pats__named          myREGEX.regex                                                                                         i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   1, fore=   1, back=   1                                                    
     get      ... get entry                        yregex_pats__unit           "entry"          , 0                                                                                  s_equal     PATS entry  ( 0) : s  1   0å(null)æ       2åcdæ                                                         
     get      ... get entry                        yregex_pats__unit           "entry"          , 1                                                                                  s_equal     PATS entry  ( 1) : -  -   -åæ             -åæ                                                           
     get      ... get entry                        yregex_pats__unit           "entry"          , 2                                                                                  s_equal     PATS entry  ( 2) : -  -   -åæ             -åæ                                                           

   COND       verify a run two named groups                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yregex_comp__prep           "ab(#cd)ef(#ghi)j"                                                                                    i_equal     0                                                                                                    
     exec     ... purge base                       yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     exec     call named run                       yregex_pats__named          myREGEX.regex                                                                                         i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   2, fore=   2, back=   2                                                    
     get      ... get entry                        yregex_pats__unit           "entry"          , 0                                                                                  s_equal     PATS entry  ( 0) : s  1   0å(null)æ       2åcdæ                                                         
     get      ... get entry                        yregex_pats__unit           "entry"          , 1                                                                                  s_equal     PATS entry  ( 1) : s  2   0å(null)æ       3åghiæ                                                        
     get      ... get entry                        yregex_pats__unit           "entry"          , 2                                                                                  s_equal     PATS entry  ( 2) : -  -   -åæ             -åæ                                                           

   COND       verify nested named groups                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yregex_comp__prep           "ab(#cdef(#ghi))j"                                                                                    i_equal     0                                                                                                    
     exec     ... purge base                       yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     exec     call named run                       yregex_pats__named          myREGEX.regex                                                                                         i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   2, fore=   2, back=   2                                                    
     get      ... get entry                        yregex_pats__unit           "entry"          , 0                                                                                  s_equal     PATS entry  ( 0) : s  1   0å(null)æ       9åcdef(ghi)æ                                               
     get      ... get entry                        yregex_pats__unit           "entry"          , 1                                                                                  s_equal     PATS entry  ( 1) : s  2   0å(null)æ       3åghiæ                                                        
     get      ... get entry                        yregex_pats__unit           "entry"          , 2                                                                                  s_equal     PATS entry  ( 2) : -  -   -åæ             -åæ                                                           

   COND       verify nested named groups and focus                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yregex_comp__prep           "ab(#cdef(#ghi)(>focus<))j"                                                                           i_equal     0                                                                                                    
     exec     ... purge base                       yregex_pats__purge                                                                                                                i_equal     0                                                                                                    
     exec     call named run                       yregex_pats__named          myREGEX.regex                                                                                         i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   3, fore=   3, back=   3                                                    
     get      ... get entry                        yregex_pats__unit           "entry"          , 0                                                                                  s_equal     PATS entry  ( 0) : s  1   0å(null)æ      16åcdef(ghi)(focus)æ                                        
     get      ... get entry                        yregex_pats__unit           "entry"          , 1                                                                                  s_equal     PATS entry  ( 1) : s  2   0å(null)æ       3åghiæ                                                        
     get      ... get entry                        yregex_pats__unit           "entry"          , 2                                                                                  s_equal     PATS entry  ( 2) : s  0   0å(null)æ       5åfocusæ                                                   

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (PATS) verify full patttern replacement                            yregex_pats_comp                                                                                      ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_loud                                                                                                                 i_equal     0                                                                                                    
     exec     load base                            yregex_pats__base                                                                                                                 i_equal     0                                                                                                    
     local    create working variable              - - - - - - - - - - - - -   char  x_one    [LEN_REGEX] = "";                                                                                                                                                                                           
     local    create working variable              - - - - - - - - - - - - -   char  x_two    [LEN_REGEX] = "";                                                                                                                                                                                           
     local    create working variable              - - - - - - - - - - - - -   char   x_fancy      [LEN_HUND] = "";                                                                                                                                                                                       

   COND       verify a run                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(#ab(&w))(&1)"                                                                                       i_equal     0                                                                                                    
     exec     call comp                            yregex_pats_comp                                                                                                                  i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 25 [((#ab(<µw+>))(ab(<µw+>)))                    ]                                

   COND       verify a multi-level pattern                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(&ip)"                                                                                               i_equal     0                                                                                                    
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 26 [(((&b)µ.(&b)µ.(&b)µ.(&b)))                   ]                                
     exec     call the normal run                  yregex_pats__replace        myREGEX.regex                    , 0                                                                  i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : ++ [(((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]]                              

   COND       verify a multi-level pattern                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     call prepare                         yregex_comp__prep           "(&ip)"                                                                                               i_equal     0                                                                                                    
     exec     call comp                            yregex_pats_comp                                                                                                                  i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : ++ [(((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]]                              

   GROUP      add a prefix                                                       - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yREGEX_comp                 "addr=(&byte)\\.(&byte)\\.(&byte)\\.(&byte)"                                                          i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : ++ [(addr=(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][]                                
     get      get current base                     yregex_comp__unit           "base"         , 0                                                                                    s_equal     COMP base        : 82 [(addr=(25[|2[[|1[[|[[|[).(25[|2[[|1[[|[[|[).(]                                
     get      get current indx                     yregex_comp__unit           "indx"         , 0                                                                                    s_equal     COMP indx        : 82 [.     a  pa q6a 66ar6a6a b  pb q6b 66br6b6b c]                                
     get      get current indx                     yregex_comp__unit           "mods"         , 0                                                                                    s_equal     COMP mods        : 82 [0     4                  4                  4]                                
     get      get current jump                     yregex_comp__unit           "jump"         , 0                                                                                    s_equal     COMP jump        : 82 [*     4   4   4   3  2   4   4   4   3  2   4]                                

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.010))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    
     get      review the pattern count             yregex_pats__unit           "count"          , 0                                                                                  s_equal     PATS count       : num=   0, fore=   0, back=   0                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
SCRP          (PATS) verify pattern saving                                       yregex_pats_comp                                                                                      ((03.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
     exec     prepare sets                         yregex_pats_init                                                                                                                  i_equal     0                                                                                                    

   COND       try a simple one                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yREGEX_comp                 "(#test)(&1)"                                                                                         i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 15 [((#test)(test))                              ]                                

   COND       try a little interviening regex                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yREGEX_comp                 "(#test).*(&1)"                                                                                       i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 17 [((#test).*(test))                            ]                                

   COND       try more interviening regex                                        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yREGEX_comp                 "(#test)[a-zW].{3,5}(&1)"                                                                             i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 27 [((#test)[a-zW].{3,5}(test))                  ]                                

   COND       try an illegal reference                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yREGEX_comp                 "(#test)(&2)"                                                                                         i_lesser    0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 13 [((#test)(&2))                                ]                                

   COND       try several repeats                                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yREGEX_comp                 "(#test).(&1).(&1).(&1)"                                                                              i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 30 [((#test).(test).(test).(test))               ]                                

   COND       try multiple repeats                                               - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     accept regex pattern                 yREGEX_comp                 "(#test).(#bird).(&2).(&1)"                                                                           i_equal     0                                                                                                    
     get      get saved regex                      yregex_comp__unit           "regex"        , 0                                                                                    s_equal     COMP regex       : 31 [((#test).(#bird).(bird).(test))              ]                                

   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((03.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    



#23456789-12  123456789-123456789-123456789-12345  123456789-123456789-123456  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-123456789- 
#==(verb)===  ===========(description)===========  =====(function)===========  ========================(arguments)=================================================================  ==(test)==  ==========================(results)=================================================================  ========(var)======= 
#SCRP          (PATS) verify standard patterns                                    yregex_pats_comp                                                                                      ((04.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#
#   COND       initialize the testing environment                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#     exec     start testing                        yregex__unit_quiet                                                                                                                i_equal     0                                                                                                    
#
#   COND       integer byte (full word)                                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.002))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#     exec     empty string                         yREGEX__testloc             "^(&byte)$"    , ""                                                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     zero                                 yREGEX__testloc             "^(&byte)$"    , "0"                                                                                  s_equal     FIND match  ( 0) :   0   1[0]                                                                        
#     exec     single digit                         yREGEX__testloc             "^(&byte)$"    , "7"                                                                                  s_equal     FIND match  ( 0) :   0   1[7]                                                                        
#     exec     double digit                         yREGEX__testloc             "^(&byte)$"    , "10"                                                                                 s_equal     FIND match  ( 0) :   0   2[10]                                                                       
#     exec     another double digit                 yREGEX__testloc             "^(&byte)$"    , "25"                                                                                 s_equal     FIND match  ( 0) :   0   2[25]                                                                       
#     exec     leading zero                         yREGEX__testloc             "^(&byte)$"    , "025"                                                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     leading space                        yREGEX__testloc             "^(&byte)$"    , " 25"                                                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     trailing space                       yREGEX__testloc             "^(&byte)$"    , "25 "                                                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     high double digit                    yREGEX__testloc             "^(&byte)$"    , "82"                                                                                 s_equal     FIND match  ( 0) :   0   2[82]                                                                       
#     exec     one hundreds                         yREGEX__testloc             "^(&byte)$"    , "125"                                                                                s_equal     FIND match  ( 0) :   0   3[125]                                                                      
#     exec     negative                             yREGEX__testloc             "^(&byte)$"    , "-125"                                                                               s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     two hundreds                         yREGEX__testloc             "^(&byte)$"    , "247"                                                                                s_equal     FIND match  ( 0) :   0   3[247]                                                                      
#     exec     two fifties                          yREGEX__testloc             "^(&byte)$"    , "254"                                                                                s_equal     FIND match  ( 0) :   0   3[254]                                                                      
#     exec     highest                              yREGEX__testloc             "^(&byte)$"    , "255"                                                                                s_equal     FIND match  ( 0) :   0   3[255]                                                                      
#     exec     just over                            yREGEX__testloc             "^(&byte)$"    , "256"                                                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     low negative                         yREGEX__testloc             "^(&byte)$"    , "-5"                                                                                 s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     float                                yREGEX__testloc             "^(&byte)$"    , "7.1"                                                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     alpha                                yREGEX__testloc             "^(&byte)$"    , "a"                                                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     word                                 yREGEX__testloc             "^(&byte)$"    , "one"                                                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     num, word, num                       yREGEX__testloc             "^(&byte)$"    , "3one5"                                                                              s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#
#   COND       integer byte (partials)                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#     exec     compile the regex                    yREGEX_comp                 "(&byte)"                                                                                             i_equal     0                                                                                                    
#     exec     zero                                 yREGEX_exec                 "0"                                                                                                   i_equal     1                                                                                                    
#     exec     double digit                         yREGEX_exec                 "10"                                                                                                  i_equal     3                                                                                                    
#     exec     another double digit                 yREGEX_exec                 "25"                                                                                                  i_equal     3                                                                                                    
#     exec     highest                              yREGEX_exec                 "255"                                                                                                 i_equal     6                                                                                                    
#
#   COND       ip address                                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.004))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#     exec     compile the regex                    yREGEX_comp                 "<(&byte)\\.(&byte)\\.(&byte)\\.(&byte)>"                                                             i_equal     0                                                                                                    
#     exec     zeros                                yREGEX_exec                 "0.0.0.0"                                                                                             i_equal     1                                                                                                    
#     exec     one letter                           yREGEX_exec                 "0.a.0.0"                                                                                             i_equal     0                                                                                                    
#     exec     three segments                       yREGEX_exec                 "0.0.0"                                                                                               i_equal     0                                                                                                    
#     exec     normal home address                  yREGEX_exec                 "192.168.0.72"                                                                                        i_equal     1                                                                                                    
#     exec     one max digit                        yREGEX_exec                 "255.168.0.72"                                                                                        i_equal     1                                                                                                    
#     exec     one negative                         yREGEX_exec                 "255.168.-2.72"                                                                                       i_equal     0                                                                                                    
#     exec     one over max digit                   yREGEX_exec                 "256.168.0.72"                                                                                        i_equal     0                                                                                                    
#     exec     prefixed and suffixed                yREGEX_exec                 "[addr=192.168.0.72]"                                                                                 i_equal     1                                                                                                    
#     exec     prefixed and suffixed                yREGEX_exec                 "addr=192.168.0.72, port=1234"                                                                        i_equal     1                                                                                                    
#
#   COND       signed integer number (full word)                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.005))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#     exec     empty string                         yREGEX__testloc             "^(&int)$"     , ""                                                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     zero                                 yREGEX__testloc             "^(&int)$"     , "0"                                                                                  s_equal     FIND match  ( 0) :   0   1[0]                                                                        
#     exec     single digit                         yREGEX__testloc             "^(&int)$"     , "4"                                                                                  s_equal     FIND match  ( 0) :   0   1[4]                                                                        
#     exec     negative                             yREGEX__testloc             "^(&int)$"     , "-9"                                                                                 s_equal     FIND match  ( 0) :   0   2[-9]                                                                       
#     exec     double digit                         yREGEX__testloc             "^(&int)$"     , "21"                                                                                 s_equal     FIND match  ( 0) :   0   2[21]                                                                       
#     exec     leading zero                         yREGEX__testloc             "^(&int)$"     , "07"                                                                                 s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     leading space                        yREGEX__testloc             "^(&int)$"     , " 7"                                                                                 s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     trailing space                       yREGEX__testloc             "^(&int)$"     , "4 "                                                                                 s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     four digits                          yREGEX__testloc             "^(&int)$"     , "3456"                                                                               s_equal     FIND match  ( 0) :   0   4[3456]                                                                     
#     exec     four digits negative                 yREGEX__testloc             "^(&int)$"     , "-1289"                                                                              s_equal     FIND match  ( 0) :   0   5[-1289]                                                                    
#     exec     eight digits                         yREGEX__testloc             "^(&int)$"     , "34561289"                                                                           s_equal     FIND match  ( 0) :   0   8[34561289]                                                                 
#     exec     eight digits negative                yREGEX__testloc             "^(&int)$"     , "-12893456"                                                                          s_equal     FIND match  ( 0) :   0   9[-12893456]                                                                
#     exec     float                                yREGEX__testloc             "^(&int)$"     , "7.1"                                                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     alpha                                yREGEX__testloc             "^(&int)$"     , "a"                                                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     word                                 yREGEX__testloc             "^(&int)$"     , "one"                                                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     num, word, num                       yREGEX__testloc             "^(&int)$"     , "3one5"                                                                              s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#
#   COND       signed float number (full word)                                    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.006))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#     exec     empty string                         yREGEX__testloc             "^(&float)$"   , ""                                                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     zero                                 yREGEX__testloc             "^(&float)$"   , "0"                                                                                  s_equal     FIND match  ( 0) :   0   1[0]                                                                        
#     exec     alpha                                yREGEX__testloc             "^(&float)$"   , "a"                                                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     single digit                         yREGEX__testloc             "^(&float)$"   , "6"                                                                                  s_equal     FIND match  ( 0) :   0   1[6]                                                                        
#     exec     single digit, negative               yREGEX__testloc             "^(&float)$"   , "-8"                                                                                 s_equal     FIND match  ( 0) :   0   2[-8]                                                                       
#     exec     leading space                        yREGEX__testloc             "^(&float)$"   , " 2"                                                                                 s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     trailing space                       yREGEX__testloc             "^(&float)$"   , "3 "                                                                                 s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     double digit                         yREGEX__testloc             "^(&float)$"   , "72"                                                                                 s_equal     FIND match  ( 0) :   0   2[72]                                                                       
#     exec     leading zero                         yREGEX__testloc             "^(&float)$"   , "09"                                                                                 s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     four digits                          yREGEX__testloc             "^(&float)$"   , "3467"                                                                               s_equal     FIND match  ( 0) :   0   4[3467]                                                                     
#     exec     four digit, negative                 yREGEX__testloc             "^(&float)$"   , "-1289"                                                                              s_equal     FIND match  ( 0) :   0   5[-1289]                                                                    
#     exec     eight digits                         yREGEX__testloc             "^(&float)$"   , "34671289"                                                                           s_equal     FIND match  ( 0) :   0   8[34671289]                                                                 
#     exec     eight digit, negative                yREGEX__testloc             "^(&float)$"   , "-12893467"                                                                          s_equal     FIND match  ( 0) :   0   9[-12893467]                                                                
#     exec     eight digits, with dec               yREGEX__testloc             "^(&float)$"   , "3.4671289"                                                                          s_equal     FIND match  ( 0) :   0   9[3.4671289]                                                                
#     exec     eight digit, negative, with dec      yREGEX__testloc             "^(&float)$"   , "-12893.467"                                                                         s_equal     FIND match  ( 0) :   0  10[-12893.467]                                                               
#     exec     word                                 yREGEX__testloc             "^(&float)$"   , "one"                                                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#     exec     num, word, num                       yREGEX__testloc             "^(&float)$"   , "3one5"                                                                              s_equal     FIND match  ( 0) :  -1  -1[]                                                                         
#
#   COND       complete testing                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((04.007))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
#     exec     stop testing                         yregex__unit_end                                                                                                                  i_equal     0                                                                                                    



# end-of-file.  done, finito, completare, whimper [Ï´···
