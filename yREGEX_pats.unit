



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
PREP          v21  include the prototype headers                                - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       v21  include public header                yREGEX.h              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
   incl       v21  include private header               yREGEX_priv.h         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          v21  (pats  ) verify pattern abbreviations                        PATS__by_abbr, PATS_comp                                                ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  initialize the testing environment                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  start testing                        yregex__unit_quiet                                                                            i_equal     0                                                                                                    
     exec     v21  prepare sets                         PATS__init                                                                                    i_equal     0                                                                                                    

   GROUP      v21  validate finding pattern by abbreviation                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  check existing abbreviations                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  check pattern abbreviation           PATS__by_abbr         'b'                                                                     i_greater   0                                                                                                    
     exec     v21  check pattern abbreviation           PATS__by_abbr         'f'                                                                     i_greater   0                                                                                                    
     exec     v21  check pattern abbreviation           PATS__by_abbr         'i'                                                                     i_greater   0                                                                                                    

   COND       v21  check illegal abbreviations                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  check pattern abbreviation           PATS__by_abbr         '0'                                                                     i_lesser    0                                                                                                    
     exec     v21  check pattern abbreviation           PATS__by_abbr         '_'                                                                     i_lesser    0                                                                                                    
     exec     v21  check pattern abbreviation           PATS__by_abbr         0                                                                       i_lesser    0                                                                                                    
     exec     v21  check pattern abbreviation           PATS__by_abbr         20                                                                      i_lesser    0                                                                                                    
     exec     v21  check pattern abbreviation           PATS__by_abbr         -15                                                                     i_lesser    0                                                                                                    

   GROUP      v21  validate pattern replacement                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  try a simple one                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 COMP__init            "(&i)"                                                                  i_equal     0                                                                                                    
     exec     v21  call the regex initialization        PATS_comp                                                                                     i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 23 [(((-)?(0|[1-9][0-9]*)))                      ]                               

   COND       v21  another valid one                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 COMP__init            "&b"                                                                    i_equal     0                                                                                                    
     exec     v21  call the regex initialization        PATS_comp                                                                                     i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 50 [(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[]                                

   GROUP      v21  validate pattern compiling                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   GROUP      v21  try a simple one                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "(&i)"                                                                  i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 23 [(((-)?(0|[1-9][0-9]*)))                      ]                               
     get      v21  get current base                     COMP__unit            "base"         , 0                                                      s_equal     COMP base        : 13 [(((-)(0|[[)))                                ]                               
     get      v21  get current indx                     COMP__unit            "indx"         , 0                                                      s_equal     COMP indx        : 13 [.ab bc cp7ca.                                ]                               
     get      v21  get current indx                     COMP__unit            "mods"         , 0                                                      s_equal     COMP mods        : 13 [000 ?1   *                                   ]                               
     get      v21  get current jump                     COMP__unit            "jump"         , 0                                                      s_equal     COMP jump        : 13 [ca2  2 3                                     ]                                

   GROUP      v21  switch to a byte                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "&b"                                                                    i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 50 [(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[]                                
     get      v21  get current base                     COMP__unit            "base"         , 0                                                      s_equal     COMP base        : 18 [(25[|2[[|1[[|[[|[)                           ]                               
     get      v21  get current indx                     COMP__unit            "indx"         , 0                                                      s_equal     COMP indx        : 18 [.  p. q7. 77.r7.7.                           ]                               
     get      v21  get current indx                     COMP__unit            "mods"         , 0                                                      s_equal     COMP mods        : 18 [4                                            ]                               
     get      v21  get current jump                     COMP__unit            "jump"         , 0                                                      s_equal     COMP jump        : 18 [4   4   4   3  2                             ]                                

   GROUP      v21  add a prefix                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "byte=&b"                                                               i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 57 [(byte=(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][]                                
     get      v21  get current base                     COMP__unit            "base"         , 0                                                      s_equal     COMP base        : 25 [(byte=(25[|2[[|1[[|[[|[))                    ]                               
     get      v21  get current indx                     COMP__unit            "indx"         , 0                                                      s_equal     COMP indx        : 25 [.     a  pa q7a 77ar7a7a.                    ]                               
     get      v21  get current indx                     COMP__unit            "mods"         , 0                                                      s_equal     COMP mods        : 25 [0     4                                      ]                               
     get      v21  get current jump                     COMP__unit            "jump"         , 0                                                      s_equal     COMP jump        : 25 [o     4   4   4   3  2                       ]                                

   GROUP      v21  multiple patterns                                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "addr=&b\\.&b\\.&b\\.&b"                                                i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : ++ [(addr=(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][]                                
     get      v21  get current base                     COMP__unit            "base"         , 0                                                      s_equal     COMP base        : 82 [(addr=(25[|2[[|1[[|[[|[).(25[|2[[|1[[|[[|[).(]                               
     get      v21  get current indx                     COMP__unit            "indx"         , 0                                                      s_equal     COMP indx        : 82 [.     a  pa q7a 77ar7a7a b  pb q7b 77br7b7b c]                               
     get      v21  get current indx                     COMP__unit            "mods"         , 0                                                      s_equal     COMP mods        : 82 [0     4                  4                  4]                               
     get      v21  get current jump                     COMP__unit            "jump"         , 0                                                      s_equal     COMP jump        : 82 [*     4   4   4   3  2   4   4   4   3  2   4]                                

   GROUP      v21  wrap up                                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  complete testing                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  stop testing                         yregex__unit_end                                                                               i_equal     0                                                                                                    



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          v21  (pats  ) verify pattern names                                PATS__by_name, PATS_comp                                                ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  initialize the testing environment                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  start testing                        yregex__unit_quiet                                                                            i_equal     0                                                                                                    
     exec     v21  prepare sets                         PATS__init                                                                                    i_equal     0                                                                                                    

   GROUP      v21  validate finding pattern by name                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  check exiting pattern names                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  check pattern name                   PATS__by_name         "byte"                                                                  i_greater   0                                                                                                    
     exec     v21  check pattern name                   PATS__by_name         "float"                                                                 i_greater   0                                                                                                    
     exec     v21  check pattern name                   PATS__by_name         "int"                                                                   i_greater   0                                                                                                    

   COND       v21  check a failing ones                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  check pattern name                   PATS__by_name         NULL                                                                    i_lesser    0                                                                                                    
     exec     v21  check pattern name                   PATS__by_name         ""                                                                      i_lesser    0                                                                                                    
     exec     v21  check pattern name                   PATS__by_name         "juxta"                                                                 i_lesser    0                                                                                                    
     exec     v21  check pattern name                   PATS__by_name         "supercalafragalistic"                                                  i_lesser    0                                                                                                    

   GROUP      v21  validate pattern replacement                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  try a simple one                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.003))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 COMP__init            "(&byte)"                                                               i_equal     0                                                                                                    
     exec     v21  call the regex initialization        PATS_comp                                                                                     i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 52 [((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|]                                

   GROUP      v21  validate pattern compiling                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   GROUP      v21  try a simple one                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "(&byte)"                                                               i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 52 [((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|]                                
     get      v21  get current base                     COMP__unit            "base"         , 0                                                      s_equal     COMP base        : 20 [((25[|2[[|1[[|[[|[))                         ]                               
     get      v21  get current indx                     COMP__unit            "indx"         , 0                                                      s_equal     COMP indx        : 20 [.a  pa q7a 77ar7a7a.                         ]                               
     get      v21  get current indx                     COMP__unit            "mods"         , 0                                                      s_equal     COMP mods        : 20 [04                                           ]                               
     get      v21  get current jump                     COMP__unit            "jump"         , 0                                                      s_equal     COMP jump        : 20 [j4   4   4   3  2                            ]                                

   GROUP      v21  add a prefix                                                 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "addr=(&byte)\\.(&byte)\\.(&byte)\\.(&byte)"                            i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : ++ [(addr=(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][]                                
     get      v21  get current base                     COMP__unit            "base"         , 0                                                      s_equal     COMP base        : 82 [(addr=(25[|2[[|1[[|[[|[).(25[|2[[|1[[|[[|[).(]                               
     get      v21  get current indx                     COMP__unit            "indx"         , 0                                                      s_equal     COMP indx        : 82 [.     a  pa q7a 77ar7a7a b  pb q7b 77br7b7b c]                               
     get      v21  get current indx                     COMP__unit            "mods"         , 0                                                      s_equal     COMP mods        : 82 [0     4                  4                  4]                               
     get      v21  get current jump                     COMP__unit            "jump"         , 0                                                      s_equal     COMP jump        : 82 [*     4   4   4   3  2   4   4   4   3  2   4]                                

   GROUP      v21  wrap up                                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  complete testing                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  stop testing                         yregex__unit_end                                                                               i_equal     0                                                                                                    



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          v21  (pats  ) verify pattern saving                               PATS_comp                                                               ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  initialize the testing environment                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  start testing                        yregex__unit_quiet                                                                            i_equal     0                                                                                                    
     exec     v21  prepare sets                         PATS__init                                                                                    i_equal     0                                                                                                    

   GROUP      v21  try a simple one                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "(#test)(&1)"                                                         i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 15 [((#test)(test))                              ]                                

   GROUP      v21  try a little interviening regex                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "(#test).*(&1)"                                                         i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 17 [((#test).*(test))                            ]                                

   GROUP      v21  try more interviening regex                                  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "(#test)[a-zW].{3,5}(&1)"                                               i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 27 [((#test)[a-zW].{3,5}(test))                  ]                                

   GROUP      v21  try an illegal reference                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "(#test)(&2)"                                                         i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 15 [((#test)(#PAT))                              ]                                

   GROUP      v21  try several repeats                                          - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "(#test).(&1).(&1).(&1)"                                                i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 30 [((#test).(test).(test).(test))               ]                                

   GROUP      v21  try multiple repeats                                         - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  accept regex pattern                 yREGEX_comp           "(#test).(#bird).(&2).(&1)"                                             i_equal     0                                                                                                    
     get      v21  get saved regex                      COMP__unit            "regex"        , 0                                                      s_equal     COMP regex       : 31 [((#test).(#bird).(bird).(test))              ]                                

   COND       v21  complete testing                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  stop testing                         yregex__unit_end                                                                               i_equal     0                                                                                                    



#23456789-12  123  123456789-123456789-123456789-12345  123456789-123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-  123456789-  123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-123456789-  -  123456789-123456789- 
#==(verb)===  ver  ===========(description)===========  =====(function)=====  ========================(arguments)===================================  ==(test)==  ==========================(results)=================================================================  t  ========(var)======= 
SCRP          v21  (pats  ) verify standard patterns                            PATS_comp                                                               ((01.---))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  

   COND       v21  initialize the testing environment                           - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.001))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  start testing                        yregex__unit_quiet                                                                            i_equal     0                                                                                                    

   COND       v21  integer byte (full word)                                     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  empty string                         yREGEX__testloc       "^(&byte)$"    , ""                                                     s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  zero                                 yREGEX__testloc       "^(&byte)$"    , "0"                                                    s_equal     FIND match  ( 0) :   0   1[0]                                                      
     exec     v21  single digit                         yREGEX__testloc       "^(&byte)$"    , "7"                                                    s_equal     FIND match  ( 0) :   0   1[7]                                                      
     exec     v21  double digit                         yREGEX__testloc       "^(&byte)$"    , "10"                                                   s_equal     FIND match  ( 0) :   0   2[10]                                                     
     exec     v21  another double digit                 yREGEX__testloc       "^(&byte)$"    , "25"                                                   s_equal     FIND match  ( 0) :   0   2[25]                                                     
     exec     v21  leading zero                         yREGEX__testloc       "^(&byte)$"    , "025"                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  leading space                        yREGEX__testloc       "^(&byte)$"    , " 25"                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  trailing space                       yREGEX__testloc       "^(&byte)$"    , "25 "                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  high double digit                    yREGEX__testloc       "^(&byte)$"    , "82"                                                   s_equal     FIND match  ( 0) :   0   2[82]                                                     
     exec     v21  one hundreds                         yREGEX__testloc       "^(&byte)$"    , "125"                                                  s_equal     FIND match  ( 0) :   0   3[125]                                                    
     exec     v21  negative                             yREGEX__testloc       "^(&byte)$"    , "-125"                                                 s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  two hundreds                         yREGEX__testloc       "^(&byte)$"    , "247"                                                  s_equal     FIND match  ( 0) :   0   3[247]                                                    
     exec     v21  two fifties                          yREGEX__testloc       "^(&byte)$"    , "254"                                                  s_equal     FIND match  ( 0) :   0   3[254]                                                    
     exec     v21  highest                              yREGEX__testloc       "^(&byte)$"    , "255"                                                  s_equal     FIND match  ( 0) :   0   3[255]                                                    
     exec     v21  just over                            yREGEX__testloc       "^(&byte)$"    , "256"                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  low negative                         yREGEX__testloc       "^(&byte)$"    , "-5"                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  float                                yREGEX__testloc       "^(&byte)$"    , "7.1"                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  alpha                                yREGEX__testloc       "^(&byte)$"    , "a"                                                    s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  word                                 yREGEX__testloc       "^(&byte)$"    , "one"                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  num, word, num                       yREGEX__testloc       "^(&byte)$"    , "3one5"                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                       

   COND       v21  integer byte (partials)                                      - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  compile the regex                    yREGEX_comp           "(&byte)"                                                               i_equal     0                                                                                  
     exec     v21  zero                                 yREGEX_exec           "0"                                                                     i_equal     1                                                                                  
     exec     v21  double digit                         yREGEX_exec           "10"                                                                    i_equal     3                                                                                  
     exec     v21  another double digit                 yREGEX_exec           "25"                                                                    i_equal     3                                                                                  
     exec     v21  highest                              yREGEX_exec           "255"                                                                   i_equal     6                                                                                  

   COND       v21  ip address                                                   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  compile the regex                    yREGEX_comp           "<(&byte)\\.(&byte)\\.(&byte)\\.(&byte)>"                               i_equal     0                                                                                  
     exec     v21  zeros                                yREGEX_exec           "0.0.0.0"                                                               i_equal     1                                                                                  
     exec     v21  one letter                           yREGEX_exec           "0.a.0.0"                                                               i_equal     0                                                                                  
     exec     v21  three segments                       yREGEX_exec           "0.0.0"                                                                 i_equal     0                                                                                  
     exec     v21  normal home address                  yREGEX_exec           "192.168.0.72"                                                          i_equal     1                                                                                  
     exec     v21  one max digit                        yREGEX_exec           "255.168.0.72"                                                          i_equal     1                                                                                  
     exec     v21  one negative                         yREGEX_exec           "255.168.-2.72"                                                         i_equal     0                                                                                  
     exec     v21  one over max digit                   yREGEX_exec           "256.168.0.72"                                                          i_equal     0                                                                                  
     exec     v21  prefixed and suffixed                yREGEX_exec           "[addr=192.168.0.72]"                                                   i_equal     1                                                                                  
     exec     v21  prefixed and suffixed                yREGEX_exec           "addr=192.168.0.72, port=1234"                                          i_equal     1                                                                                  

   COND       v21  signed integer number (full word)                            - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  empty string                         yREGEX__testloc       "^(&int)$"     , ""                                                     s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  zero                                 yREGEX__testloc       "^(&int)$"     , "0"                                                    s_equal     FIND match  ( 0) :   0   1[0]                                                      
     exec     v21  single digit                         yREGEX__testloc       "^(&int)$"     , "4"                                                    s_equal     FIND match  ( 0) :   0   1[4]                                                      
     exec     v21  negative                             yREGEX__testloc       "^(&int)$"     , "-9"                                                   s_equal     FIND match  ( 0) :   0   2[-9]                                                     
     exec     v21  double digit                         yREGEX__testloc       "^(&int)$"     , "21"                                                   s_equal     FIND match  ( 0) :   0   2[21]                                                     
     exec     v21  leading zero                         yREGEX__testloc       "^(&int)$"     , "07"                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  leading space                        yREGEX__testloc       "^(&int)$"     , " 7"                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  trailing space                       yREGEX__testloc       "^(&int)$"     , "4 "                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  four digits                          yREGEX__testloc       "^(&int)$"     , "3456"                                                 s_equal     FIND match  ( 0) :   0   4[3456]                                                   
     exec     v21  four digits negative                 yREGEX__testloc       "^(&int)$"     , "-1289"                                                s_equal     FIND match  ( 0) :   0   5[-1289]                                                  
     exec     v21  eight digits                         yREGEX__testloc       "^(&int)$"     , "34561289"                                             s_equal     FIND match  ( 0) :   0   8[34561289]                                               
     exec     v21  eight digits negative                yREGEX__testloc       "^(&int)$"     , "-12893456"                                            s_equal     FIND match  ( 0) :   0   9[-12893456]                                              
     exec     v21  float                                yREGEX__testloc       "^(&int)$"     , "7.1"                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  alpha                                yREGEX__testloc       "^(&int)$"     , "a"                                                    s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  word                                 yREGEX__testloc       "^(&int)$"     , "one"                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  num, word, num                       yREGEX__testloc       "^(&int)$"     , "3one5"                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                       

   COND       v21  signed float number (full word)                              - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   - - - - -   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  empty string                         yREGEX__testloc       "^(&float)$"   , ""                                                     s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  zero                                 yREGEX__testloc       "^(&float)$"   , "0"                                                    s_equal     FIND match  ( 0) :   0   1[0]                                                      
     exec     v21  alpha                                yREGEX__testloc       "^(&float)$"   , "a"                                                    s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  single digit                         yREGEX__testloc       "^(&float)$"   , "6"                                                    s_equal     FIND match  ( 0) :   0   1[6]                                                      
     exec     v21  single digit, negative               yREGEX__testloc       "^(&float)$"   , "-8"                                                   s_equal     FIND match  ( 0) :   0   2[-8]                                                     
     exec     v21  leading space                        yREGEX__testloc       "^(&float)$"   , " 2"                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  trailing space                       yREGEX__testloc       "^(&float)$"   , "3 "                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  double digit                         yREGEX__testloc       "^(&float)$"   , "72"                                                   s_equal     FIND match  ( 0) :   0   2[72]                                                     
     exec     v21  leading zero                         yREGEX__testloc       "^(&float)$"   , "09"                                                   s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  four digits                          yREGEX__testloc       "^(&float)$"   , "3467"                                                 s_equal     FIND match  ( 0) :   0   4[3467]                                                   
     exec     v21  four digit, negative                 yREGEX__testloc       "^(&float)$"   , "-1289"                                                s_equal     FIND match  ( 0) :   0   5[-1289]                                                  
     exec     v21  eight digits                         yREGEX__testloc       "^(&float)$"   , "34671289"                                             s_equal     FIND match  ( 0) :   0   8[34671289]                                               
     exec     v21  eight digit, negative                yREGEX__testloc       "^(&float)$"   , "-12893467"                                            s_equal     FIND match  ( 0) :   0   9[-12893467]                                              
     exec     v21  eight digits, with dec               yREGEX__testloc       "^(&float)$"   , "3.4671289"                                            s_equal     FIND match  ( 0) :   0   9[3.4671289]                                              
     exec     v21  eight digit, negative, with dec      yREGEX__testloc       "^(&float)$"   , "-12893.467"                                           s_equal     FIND match  ( 0) :   0  10[-12893.467]                                             
     exec     v21  word                                 yREGEX__testloc       "^(&float)$"   , "one"                                                  s_equal     FIND match  ( 0) :  -1  -1[]                                                       
     exec     v21  num, word, num                       yREGEX__testloc       "^(&float)$"   , "3one5"                                                s_equal     FIND match  ( 0) :  -1  -1[]                                                       

   COND       v21  complete testing                                             - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -   ((01.011))  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
     exec     v21  stop testing                         yregex__unit_end                                                                               i_equal     0                                                                                                    



